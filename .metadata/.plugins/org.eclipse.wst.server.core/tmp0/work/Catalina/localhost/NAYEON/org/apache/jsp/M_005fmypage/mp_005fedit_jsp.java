/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-11-16 02:42:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.M_005fmypage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.Connection;
import javax.sql.DataSource;
import javax.naming.InitialContext;
import javax.naming.Context;
import gang.DAOmember;
import gang.DTOmember;

public final class mp_005fedit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javax.naming.InitialContext");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("gang.DAOmember");
    _jspx_imports_classes.add("gang.DTOmember");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("javax.sql.DataSource");
    _jspx_imports_classes.add("javax.naming.Context");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>주인없는 하늘아래</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  <!-- 비밀번호 변경 새창 열기-->\r\n");
      out.write("  function mp_pwPop(){\r\n");
      out.write("    var mp_pwPop = window.open('M_mypage/mp_pw.jsp', '비밀번호 변경', 'width=500px,height=400px, scrollbars=yes');\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  function deletePop(){\r\n");
      out.write("	    var deletePop = window.open('M_mypage/mp_delete.jsp', '회원 탈퇴', 'width=500px,height=400px, scrollbars=yes');\r\n");
      out.write("	}\r\n");
      out.write("  \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write(" ");
 
request.setCharacterEncoding("UTF-8");
String id = (String) session.getAttribute("id"); 
String name = "";
String mail = "";
String tel = "";

Connection con = null;
Statement stmt = null;
PreparedStatement psmt =null;
ResultSet rs =null;

try {
    // 커넥션 풀(DataSource) 얻기
    Context initCtx = new InitialContext();
    Context ctx = (Context)initCtx.lookup("java:comp/env");
    DataSource source = (DataSource)ctx.lookup("dbcp_myoracle");

    // 커넥션 풀을 통해 연결 얻기
    con = source.getConnection();

    System.out.println("DB 커넥션 풀 연결 성공");
    
    
    //쿼리문 실행
    stmt = con.createStatement();
    String query = "select * from member where id = '" + id + "'";
    rs = stmt.executeQuery(query);
    
    if (rs.next()) {
		name = rs.getString("name");
		mail = rs.getString("mail");
		tel = rs.getString("tel");
	}
       
    
    
}catch (Exception e) {
    System.out.println("DB 커넥션 풀 연결 실패");
    e.printStackTrace();
}finally{
	if (rs != null) rs.close();
    if (stmt != null) stmt.close();
    if (psmt != null) psmt.close();
    if (con != null) con.close();  // 자동으로 커넥션 풀로 반납됨

    System.out.println("DB 커넥션 풀 자원 반납");
}



      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form action=\"M_mypage/mp_editpro.jsp\">\r\n");
      out.write("<div style=\"width: 30%; margin: auto;\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"input-group mb-3\">\r\n");
      out.write("  <span class=\"input-group-text\" id=\"basic-addon1\">아이디</span>\r\n");
      out.write("  <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" value=\"");
      out.print(id );
      out.write("\" style=\" background-color: #F2F5F9;\"  readonly/> \r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"input-group mb-3\">\r\n");
      out.write("  <span class=\"input-group-text\" id=\"basic-addon1\">이름</span>\r\n");
      out.write("  <input type=\"text\" class=\"form-control\" placeholder=\"NAME\" id=\"name\" name=\"name\"  value=\"");
      out.print(name );
      out.write("\" required/>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"input-group mb-3\">\r\n");
      out.write("  <span class=\"input-group-text\" id=\"basic-addon1\">이메일</span>\r\n");
      out.write("  <input type=\"text\" class=\"form-control\" placeholder=\"EMAIL ADDRESS\" id=\"mail\" name=\"mail\" value=\"");
      out.print(mail );
      out.write("\" required/>\r\n");
      out.write("</div>   \r\n");
      out.write("\r\n");
      out.write("<div class=\"input-group mb-3\">\r\n");
      out.write("  <span class=\"input-group-text\" id=\"basic-addon1\">연락처</span>\r\n");
      out.write("    <input type=\"text\" class=\"form-control\"  placeholder=\"- 입력 제외\" name=\"tel\" maxlength=\"11\"  id=\"tel\" name=\"tel\" value=\"");
      out.print(tel );
      out.write("\"\r\n");
      out.write(" 	 oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\" required/> \r\n");
      out.write("</div>  \r\n");
      out.write(" \r\n");
      out.write("	\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-link\" style=\"margin-left: 350px;\" onclick=\"deletePop()\"> 탈퇴하기 </button>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<button type=\"submit\" class=\"btn btn-outline-secondary\" > 회원정보 수정</button>	\r\n");
      out.write("<button type=\"button\" class=\"btn btn-outline-secondary\" onclick=\"mp_pwPop()\"> 비밀번호 변경 </button>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
